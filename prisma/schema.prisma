generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String     @id @default(auto()) @map("_id") @db.ObjectId
  email              String     @unique
  name               String?
  hashedPassword     String
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  isActive           Boolean    @default(true)
  subscriptionStatus String     @default("trial")
  subscriptionEndDate DateTime?
  website            Website?
  documents          Document[]
  media              Media[]
}

model Media {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  fileName    String    
  s3Key       String    
  s3Url       String    
  mimeType    String    
  size        Int       
  width       Int?      
  height      Int?      
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Relationship to user who uploaded
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
  
  // Relationship to documents where this is used as header
  headerForDocuments Document[] @relation("HeaderImage")
  
  // For MongoDB many-to-many relationship
  attachedToDocumentIds String[] @db.ObjectId
  attachedToDocuments   Document[] @relation("AttachedMedia", fields: [attachedToDocumentIds], references: [id])
}

model Document {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  content         String
  slug            String
  isPublished     Boolean   @default(false)
  publishedAt     DateTime?
  metaTitle       String?
  metaDescription String?
  tags            String[]
  category        String?
  
  // Header image relation
  headerImageId   String?   @db.ObjectId
  headerImage     Media?    @relation("HeaderImage", fields: [headerImageId], references: [id])
  
  // For MongoDB many-to-many relationship
  attachedMediaIds String[] @db.ObjectId
  attachedMedia    Media[]  @relation("AttachedMedia", fields: [attachedMediaIds], references: [id])
  
  userId          String    @db.ObjectId
  user            User      @relation(fields: [userId], references: [id])
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@unique([userId, slug])
}

model Website {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  subdomain     String    @unique
  customDomain  String?
  theme         String    @default("default")
  primaryColor  String    @default("#000000")
  title         String    @default("My Website")
  description   String?
  userId        String    @unique @db.ObjectId
  user          User      @relation(fields: [userId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}